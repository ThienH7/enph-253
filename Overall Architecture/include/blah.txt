int state = 0;
bool TEAM = true; //true = THANOS, false = METHANOS; 
int stoneNumber = 0;
int splitNumber = 0;
bool direction_facing = true; //true = forwards, false = backwards 

PinName outputPins [12] ={ARM_SERVO, ARM_MOTOR_LEFT, ARM_MOTOR_RIGHT, CLAW_SERVO, CLAW_MOTOR_UP, CLAW_MOTOR_DOWN, 
L_GAUNTLET_SERVO, LEFT_FORWARD_WHEEL_MOTOR, RIGHT_FORWARD_WHEEL_MOTOR, R_GAUNTLET_SERVO, LEFT_BACKWARD_WHEEL_MOTOR, 
RIGHT_BACKWARD_WHEEL_MOTOR};
// input_pullup or output

PinName inputPins [16] = {ARM_SONAR, CLAW_ENCODER, ARM_HOME_SWITCH, TUNING_KNOB_A, TUNING_KNOB_B, TUNING_BUTTON,
L_TAPE_FOLLOW, R_TAPE_FOLLOW, L_SPLIT, R_SPLIT, L_TAB, R_TAB, L_GAUNTLET, R_GAUNTLET, CALIBRATE, T_OR_M};

bool direction = LEFT; 

volatile int* p_KP_WHEEL = (int*) 0x0801FFF3;
volatile int* p_KD_WHEEL = (int*) 0x0801FFF7;
volatile int* p_THRESHOLD = (int*) 0x0801FFFB;
volatile int* p_SPLIT_THRESHOLD = (int*) 0x0801FFEF;
volatile int* p_TAB_THRESHOLD = (int*) 0x0801FFDB;
volatile int* p_GAUNTLET_TAPE_THRESHOLD = (int*) 0x0801FFEB;
volatile int* p_EDGE_THRESHOLD = (int*) 0x0801FFE7;
volatile int* p_COLLISION_THRESHOLD = (int*) 0x0801FFE3;
volatile int* p_CALIBRATED = (int*) 0x0801FFDF; 

//put these into TuningMenu.h and have a method that puts them into RAM at startup